generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Or your database provider
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid()) // Use cuid() or uuid()
  username  String    @unique
  email     String    @unique
  password  String
  role      UserRole  @default(customer)
  orders    Order[]
  cart      Cart?
  wishlist  Wishlist?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id            String            @id @default(cuid()) // Use cuid() or uuid()
  name          String
  description   String
  price         Float
  stock         Int
  imageUrl      String
  categoryId    String
  category      Category          @relation(fields: [categoryId], references: [id])
  cartItems     CartItem[] // Relation with CartItem
  orderItems    OrderItem[] // Relation with OrderItem
  wishlistItems WishlistProduct[] // Relation with WishlistProduct
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Category {
  id        String    @id @default(cuid()) // Use cuid() or uuid()
  name      String    @unique
  imageUrl  String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id        String      @id @default(cuid()) // Use cuid() or uuid()
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
  total     Float
  status    String      @default("Processing")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid()) // Use cuid() or uuid()
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String     @id @default(cuid()) // Use cuid() or uuid()
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(cuid()) // Use cuid() or uuid()
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wishlist {
  id        String            @id @default(cuid()) // Use cuid() or uuid()
  userId    String            @unique
  user      User              @relation(fields: [userId], references: [id])
  products  WishlistProduct[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model WishlistProduct {
  id         String   @id @default(cuid()) // Use cuid() or uuid()
  wishlistId String
  wishlist   Wishlist @relation(fields: [wishlistId], references: [id])
  productId  String
  product    Product  @relation(fields: [productId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum UserRole {
  admin
  customer
}
